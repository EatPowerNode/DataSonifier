name: Build DataSonifier Executables

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller matplotlib numpy pygame

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed sonifier.py

    - name: Rename executable for clarity
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          mv dist/sonifier.exe dist/sonifier-windows.exe
        elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          mv dist/sonifier dist/sonifier-linux
        else
          mv dist/sonifier dist/sonifier-macos
        fi

    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4
      with:
        name: sonifier-${{ matrix.os }}
        path: dist/sonifier-*

  update-readme:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not PRs
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get latest workflow run artifacts
      uses: actions/github-script@v7
      id: get-artifacts
      with:
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId,
          });
          const artifactData = {};
          for (const artifact of artifacts.data.artifacts) {
            const downloadUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifact.id}`;
            if (artifact.name === 'sonifier-windows-latest') {
              artifactData.windows = downloadUrl;
            } else if (artifact.name === 'sonifier-ubuntu-latest') {
              artifactData.linux = downloadUrl;
            } else if (artifact.name === 'sonifier-macos-latest') {
              artifactData.macos = downloadUrl;
            }
          }
          return artifactData;

    - name: Update README with artifact URLs
      run: |
        sed -i 's|- \[Windows (64-bit)\](.*)|- [Windows (64-bit)](${WINDOWS_URL})|' README.md
        sed -i 's|- \[Linux (64-bit)\](.*)|- [Linux (64-bit)](${LINUX_URL})|' README.md
        sed -i 's|- \[macOS (64-bit)\](.*)|- [macOS (64-bit)](${MACOS_URL})|' README.md
      env:
        WINDOWS_URL: ${{ steps.get-artifacts.outputs.result.windows }}
        LINUX_URL: ${{ steps.get-artifacts.outputs.result.linux }}
        MACOS_URL: ${{ steps.get-artifacts.outputs.result.macos }}

    - name: Commit and push updated README
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add README.md
        git commit -m "Update README with latest artifact URLs"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}